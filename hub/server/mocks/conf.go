// Code generated by mockery v2.33.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Conf is an autogenerated mock type for the Conf type
type Conf struct {
	mock.Mock
}

type Conf_Expecter struct {
	mock *mock.Mock
}

func (_m *Conf) EXPECT() *Conf_Expecter {
	return &Conf_Expecter{mock: &_m.Mock}
}

// Addr provides a mock function with given fields:
func (_m *Conf) Addr() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Conf_Addr_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Addr'
type Conf_Addr_Call struct {
	*mock.Call
}

// Addr is a helper method to define mock.On call
func (_e *Conf_Expecter) Addr() *Conf_Addr_Call {
	return &Conf_Addr_Call{Call: _e.mock.On("Addr")}
}

func (_c *Conf_Addr_Call) Run(run func()) *Conf_Addr_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Conf_Addr_Call) Return(_a0 string) *Conf_Addr_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Conf_Addr_Call) RunAndReturn(run func() string) *Conf_Addr_Call {
	_c.Call.Return(run)
	return _c
}

// RequestTimeout provides a mock function with given fields:
func (_m *Conf) RequestTimeout() time.Duration {
	ret := _m.Called()

	var r0 time.Duration
	if rf, ok := ret.Get(0).(func() time.Duration); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Duration)
	}

	return r0
}

// Conf_RequestTimeout_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestTimeout'
type Conf_RequestTimeout_Call struct {
	*mock.Call
}

// RequestTimeout is a helper method to define mock.On call
func (_e *Conf_Expecter) RequestTimeout() *Conf_RequestTimeout_Call {
	return &Conf_RequestTimeout_Call{Call: _e.mock.On("RequestTimeout")}
}

func (_c *Conf_RequestTimeout_Call) Run(run func()) *Conf_RequestTimeout_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Conf_RequestTimeout_Call) Return(_a0 time.Duration) *Conf_RequestTimeout_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Conf_RequestTimeout_Call) RunAndReturn(run func() time.Duration) *Conf_RequestTimeout_Call {
	_c.Call.Return(run)
	return _c
}

// NewConf creates a new instance of Conf. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConf(t interface {
	mock.TestingT
	Cleanup(func())
}) *Conf {
	mock := &Conf{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
